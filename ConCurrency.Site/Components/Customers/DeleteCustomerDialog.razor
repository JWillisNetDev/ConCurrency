@using ConCurrency.Data.Dtos.Customers
@using System.ComponentModel.DataAnnotations
@using ConCurrency.Data.Validators
@using ConCurrency.Site.HttpClients.Customers

@rendermode InteractiveServer

@inject ICustomersClient CustomersClient

<MudDialog>
	<TitleContent>
		<MudText Typo="Typo.h6">
			<MudIcon Icon="@Icons.Material.Filled.PersonRemove" />
			Delete @(Customer.Name)
		</MudText>
	</TitleContent>
	<DialogContent>
	</DialogContent>
	<DialogActions>
		<MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@OnDelete">
			Delete
		</MudButton>
		<MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => Dialog.Cancel())">
			Cancel
		</MudButton>
	</DialogActions>
</MudDialog>

@code
{

	[Parameter]
	public CustomerDto Customer { get; set; }

	[CascadingParameter]
	private MudDialogInstance Dialog { get; set; } = null!;

	private async Task OnDelete()
	{
		await CustomersClient.DeleteCustomerAsync(Customer.CustomerId!);
		Dialog.Close(DialogResult.Ok(true));
	}
}